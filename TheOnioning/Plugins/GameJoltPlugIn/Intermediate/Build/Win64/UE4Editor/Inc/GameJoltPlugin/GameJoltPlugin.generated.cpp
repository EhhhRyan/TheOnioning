// Copyright 1998-2015 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "Private/GameJoltPluginPCH.h"
#include "GameJoltPlugin.generated.dep.h"
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCodeGameJoltPlugin() {}
static class UEnum* EGameJoltAchievedTrophies_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMEJOLTPLUGIN_API class UEnum* Z_Construct_UEnum_GameJoltPlugin_EGameJoltAchievedTrophies();
		extern GAMEJOLTPLUGIN_API class UPackage* Z_Construct_UPackage_GameJoltPlugin();
		Singleton = GetStaticEnum(Z_Construct_UEnum_GameJoltPlugin_EGameJoltAchievedTrophies, Z_Construct_UPackage_GameJoltPlugin(), TEXT("EGameJoltAchievedTrophies"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EGameJoltAchievedTrophies(EGameJoltAchievedTrophies_StaticEnum, TEXT("/Script/GameJoltPlugin"));
static class UEnum* EGameJoltComponentEnum_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMEJOLTPLUGIN_API class UEnum* Z_Construct_UEnum_GameJoltPlugin_EGameJoltComponentEnum();
		extern GAMEJOLTPLUGIN_API class UPackage* Z_Construct_UPackage_GameJoltPlugin();
		Singleton = GetStaticEnum(Z_Construct_UEnum_GameJoltPlugin_EGameJoltComponentEnum, Z_Construct_UPackage_GameJoltPlugin(), TEXT("EGameJoltComponentEnum"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EGameJoltComponentEnum(EGameJoltComponentEnum_StaticEnum, TEXT("/Script/GameJoltPlugin"));
class UScriptStruct* FScoreTableInfo::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMEJOLTPLUGIN_API class UScriptStruct* Z_Construct_UScriptStruct_FScoreTableInfo();
		extern GAMEJOLTPLUGIN_API uint32 Get_Z_Construct_UScriptStruct_FScoreTableInfo_CRC();
		extern GAMEJOLTPLUGIN_API class UPackage* Z_Construct_UPackage_GameJoltPlugin();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FScoreTableInfo, Z_Construct_UPackage_GameJoltPlugin(), TEXT("ScoreTableInfo"), sizeof(FScoreTableInfo), Get_Z_Construct_UScriptStruct_FScoreTableInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FScoreTableInfo(FScoreTableInfo::StaticStruct, TEXT("/Script/GameJoltPlugin"));
static struct FScriptStruct_GameJoltPlugin_StaticRegisterNativesFScoreTableInfo
{
	FScriptStruct_GameJoltPlugin_StaticRegisterNativesFScoreTableInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("ScoreTableInfo")),new UScriptStruct::TCppStructOps<FScoreTableInfo>);
	}
} ScriptStruct_GameJoltPlugin_StaticRegisterNativesFScoreTableInfo;
class UScriptStruct* FScoreInfo::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMEJOLTPLUGIN_API class UScriptStruct* Z_Construct_UScriptStruct_FScoreInfo();
		extern GAMEJOLTPLUGIN_API uint32 Get_Z_Construct_UScriptStruct_FScoreInfo_CRC();
		extern GAMEJOLTPLUGIN_API class UPackage* Z_Construct_UPackage_GameJoltPlugin();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FScoreInfo, Z_Construct_UPackage_GameJoltPlugin(), TEXT("ScoreInfo"), sizeof(FScoreInfo), Get_Z_Construct_UScriptStruct_FScoreInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FScoreInfo(FScoreInfo::StaticStruct, TEXT("/Script/GameJoltPlugin"));
static struct FScriptStruct_GameJoltPlugin_StaticRegisterNativesFScoreInfo
{
	FScriptStruct_GameJoltPlugin_StaticRegisterNativesFScoreInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("ScoreInfo")),new UScriptStruct::TCppStructOps<FScoreInfo>);
	}
} ScriptStruct_GameJoltPlugin_StaticRegisterNativesFScoreInfo;
class UScriptStruct* FTrophyInfo::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMEJOLTPLUGIN_API class UScriptStruct* Z_Construct_UScriptStruct_FTrophyInfo();
		extern GAMEJOLTPLUGIN_API uint32 Get_Z_Construct_UScriptStruct_FTrophyInfo_CRC();
		extern GAMEJOLTPLUGIN_API class UPackage* Z_Construct_UPackage_GameJoltPlugin();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FTrophyInfo, Z_Construct_UPackage_GameJoltPlugin(), TEXT("TrophyInfo"), sizeof(FTrophyInfo), Get_Z_Construct_UScriptStruct_FTrophyInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FTrophyInfo(FTrophyInfo::StaticStruct, TEXT("/Script/GameJoltPlugin"));
static struct FScriptStruct_GameJoltPlugin_StaticRegisterNativesFTrophyInfo
{
	FScriptStruct_GameJoltPlugin_StaticRegisterNativesFTrophyInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("TrophyInfo")),new UScriptStruct::TCppStructOps<FTrophyInfo>);
	}
} ScriptStruct_GameJoltPlugin_StaticRegisterNativesFTrophyInfo;
class UScriptStruct* FUserInfo::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMEJOLTPLUGIN_API class UScriptStruct* Z_Construct_UScriptStruct_FUserInfo();
		extern GAMEJOLTPLUGIN_API uint32 Get_Z_Construct_UScriptStruct_FUserInfo_CRC();
		extern GAMEJOLTPLUGIN_API class UPackage* Z_Construct_UPackage_GameJoltPlugin();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FUserInfo, Z_Construct_UPackage_GameJoltPlugin(), TEXT("UserInfo"), sizeof(FUserInfo), Get_Z_Construct_UScriptStruct_FUserInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FUserInfo(FUserInfo::StaticStruct, TEXT("/Script/GameJoltPlugin"));
static struct FScriptStruct_GameJoltPlugin_StaticRegisterNativesFUserInfo
{
	FScriptStruct_GameJoltPlugin_StaticRegisterNativesFUserInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("UserInfo")),new UScriptStruct::TCppStructOps<FUserInfo>);
	}
} ScriptStruct_GameJoltPlugin_StaticRegisterNativesFUserInfo;
	void UUEGameJoltAPI::StaticRegisterNativesUUEGameJoltAPI()
	{
		FNativeFunctionRegistrar::RegisterFunction(UUEGameJoltAPI::StaticClass(),"AddScore",(Native)&UUEGameJoltAPI::execAddScore);
		FNativeFunctionRegistrar::RegisterFunction(UUEGameJoltAPI::StaticClass(),"AuthUser",(Native)&UUEGameJoltAPI::execAuthUser);
		FNativeFunctionRegistrar::RegisterFunction(UUEGameJoltAPI::StaticClass(),"Char2Hex",(Native)&UUEGameJoltAPI::execChar2Hex);
		FNativeFunctionRegistrar::RegisterFunction(UUEGameJoltAPI::StaticClass(),"Create",(Native)&UUEGameJoltAPI::execCreate);
		FNativeFunctionRegistrar::RegisterFunction(UUEGameJoltAPI::StaticClass(),"EncodeURL",(Native)&UUEGameJoltAPI::execEncodeURL);
		FNativeFunctionRegistrar::RegisterFunction(UUEGameJoltAPI::StaticClass(),"FetchArrayUsers",(Native)&UUEGameJoltAPI::execFetchArrayUsers);
		FNativeFunctionRegistrar::RegisterFunction(UUEGameJoltAPI::StaticClass(),"FetchScoreboard",(Native)&UUEGameJoltAPI::execFetchScoreboard);
		FNativeFunctionRegistrar::RegisterFunction(UUEGameJoltAPI::StaticClass(),"FetchScoreboardTable",(Native)&UUEGameJoltAPI::execFetchScoreboardTable);
		FNativeFunctionRegistrar::RegisterFunction(UUEGameJoltAPI::StaticClass(),"FetchTrophies",(Native)&UUEGameJoltAPI::execFetchTrophies);
		FNativeFunctionRegistrar::RegisterFunction(UUEGameJoltAPI::StaticClass(),"FetchUser",(Native)&UUEGameJoltAPI::execFetchUser);
		FNativeFunctionRegistrar::RegisterFunction(UUEGameJoltAPI::StaticClass(),"FromString",(Native)&UUEGameJoltAPI::execFromString);
		FNativeFunctionRegistrar::RegisterFunction(UUEGameJoltAPI::StaticClass(),"GetBool",(Native)&UUEGameJoltAPI::execGetBool);
		FNativeFunctionRegistrar::RegisterFunction(UUEGameJoltAPI::StaticClass(),"GetGameID",(Native)&UUEGameJoltAPI::execGetGameID);
		FNativeFunctionRegistrar::RegisterFunction(UUEGameJoltAPI::StaticClass(),"GetGamePrivateKey",(Native)&UUEGameJoltAPI::execGetGamePrivateKey);
		FNativeFunctionRegistrar::RegisterFunction(UUEGameJoltAPI::StaticClass(),"GetIMGURL",(Native)&UUEGameJoltAPI::execGetIMGURL);
		FNativeFunctionRegistrar::RegisterFunction(UUEGameJoltAPI::StaticClass(),"GetInt",(Native)&UUEGameJoltAPI::execGetInt);
		FNativeFunctionRegistrar::RegisterFunction(UUEGameJoltAPI::StaticClass(),"GetObject",(Native)&UUEGameJoltAPI::execGetObject);
		FNativeFunctionRegistrar::RegisterFunction(UUEGameJoltAPI::StaticClass(),"GetObjectArray",(Native)&UUEGameJoltAPI::execGetObjectArray);
		FNativeFunctionRegistrar::RegisterFunction(UUEGameJoltAPI::StaticClass(),"GetObjectKeys",(Native)&UUEGameJoltAPI::execGetObjectKeys);
		FNativeFunctionRegistrar::RegisterFunction(UUEGameJoltAPI::StaticClass(),"GetScoreboard",(Native)&UUEGameJoltAPI::execGetScoreboard);
		FNativeFunctionRegistrar::RegisterFunction(UUEGameJoltAPI::StaticClass(),"GetScoreboardTable",(Native)&UUEGameJoltAPI::execGetScoreboardTable);
		FNativeFunctionRegistrar::RegisterFunction(UUEGameJoltAPI::StaticClass(),"GetString",(Native)&UUEGameJoltAPI::execGetString);
		FNativeFunctionRegistrar::RegisterFunction(UUEGameJoltAPI::StaticClass(),"GetTrophies",(Native)&UUEGameJoltAPI::execGetTrophies);
		FNativeFunctionRegistrar::RegisterFunction(UUEGameJoltAPI::StaticClass(),"GetUsername",(Native)&UUEGameJoltAPI::execGetUsername);
		FNativeFunctionRegistrar::RegisterFunction(UUEGameJoltAPI::StaticClass(),"GetUserToken",(Native)&UUEGameJoltAPI::execGetUserToken);
		FNativeFunctionRegistrar::RegisterFunction(UUEGameJoltAPI::StaticClass(),"isUserAuthorize",(Native)&UUEGameJoltAPI::execisUserAuthorize);
		FNativeFunctionRegistrar::RegisterFunction(UUEGameJoltAPI::StaticClass(),"LogInStatus",(Native)&UUEGameJoltAPI::execLogInStatus);
		FNativeFunctionRegistrar::RegisterFunction(UUEGameJoltAPI::StaticClass(),"LogOffUser",(Native)&UUEGameJoltAPI::execLogOffUser);
		FNativeFunctionRegistrar::RegisterFunction(UUEGameJoltAPI::StaticClass(),"RewardTrophy",(Native)&UUEGameJoltAPI::execRewardTrophy);
		FNativeFunctionRegistrar::RegisterFunction(UUEGameJoltAPI::StaticClass(),"SendRequest",(Native)&UUEGameJoltAPI::execSendRequest);
		FNativeFunctionRegistrar::RegisterFunction(UUEGameJoltAPI::StaticClass(),"SetGameID",(Native)&UUEGameJoltAPI::execSetGameID);
		FNativeFunctionRegistrar::RegisterFunction(UUEGameJoltAPI::StaticClass(),"SetGamePrivateKey",(Native)&UUEGameJoltAPI::execSetGamePrivateKey);
		FNativeFunctionRegistrar::RegisterFunction(UUEGameJoltAPI::StaticClass(),"SetUserName",(Native)&UUEGameJoltAPI::execSetUserName);
		FNativeFunctionRegistrar::RegisterFunction(UUEGameJoltAPI::StaticClass(),"SetUserToken",(Native)&UUEGameJoltAPI::execSetUserToken);
	}
	IMPLEMENT_CLASS(UUEGameJoltAPI, 3857475959);
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	COREUOBJECT_API class UClass* Z_Construct_UClass_UObject_NoRegister();
	COREUOBJECT_API class UClass* Z_Construct_UClass_UObject();

	GAMEJOLTPLUGIN_API class UFunction* Z_Construct_UDelegateFunction_GameJoltPlugin_OnFailed__DelegateSignature();
	GAMEJOLTPLUGIN_API class UFunction* Z_Construct_UDelegateFunction_GameJoltPlugin_OnGetResult__DelegateSignature();
	GAMEJOLTPLUGIN_API class UEnum* Z_Construct_UEnum_GameJoltPlugin_EGameJoltAchievedTrophies();
	GAMEJOLTPLUGIN_API class UEnum* Z_Construct_UEnum_GameJoltPlugin_EGameJoltComponentEnum();
	GAMEJOLTPLUGIN_API class UScriptStruct* Z_Construct_UScriptStruct_FScoreTableInfo();
	GAMEJOLTPLUGIN_API class UScriptStruct* Z_Construct_UScriptStruct_FScoreInfo();
	GAMEJOLTPLUGIN_API class UScriptStruct* Z_Construct_UScriptStruct_FTrophyInfo();
	GAMEJOLTPLUGIN_API class UScriptStruct* Z_Construct_UScriptStruct_FUserInfo();
	GAMEJOLTPLUGIN_API class UFunction* Z_Construct_UFunction_UUEGameJoltAPI_AddScore();
	GAMEJOLTPLUGIN_API class UFunction* Z_Construct_UFunction_UUEGameJoltAPI_AuthUser();
	GAMEJOLTPLUGIN_API class UFunction* Z_Construct_UFunction_UUEGameJoltAPI_Char2Hex();
	GAMEJOLTPLUGIN_API class UFunction* Z_Construct_UFunction_UUEGameJoltAPI_Create();
	GAMEJOLTPLUGIN_API class UFunction* Z_Construct_UFunction_UUEGameJoltAPI_EncodeURL();
	GAMEJOLTPLUGIN_API class UFunction* Z_Construct_UFunction_UUEGameJoltAPI_FetchArrayUsers();
	GAMEJOLTPLUGIN_API class UFunction* Z_Construct_UFunction_UUEGameJoltAPI_FetchScoreboard();
	GAMEJOLTPLUGIN_API class UFunction* Z_Construct_UFunction_UUEGameJoltAPI_FetchScoreboardTable();
	GAMEJOLTPLUGIN_API class UFunction* Z_Construct_UFunction_UUEGameJoltAPI_FetchTrophies();
	GAMEJOLTPLUGIN_API class UFunction* Z_Construct_UFunction_UUEGameJoltAPI_FetchUser();
	GAMEJOLTPLUGIN_API class UFunction* Z_Construct_UFunction_UUEGameJoltAPI_FromString();
	GAMEJOLTPLUGIN_API class UFunction* Z_Construct_UFunction_UUEGameJoltAPI_GetBool();
	GAMEJOLTPLUGIN_API class UFunction* Z_Construct_UFunction_UUEGameJoltAPI_GetGameID();
	GAMEJOLTPLUGIN_API class UFunction* Z_Construct_UFunction_UUEGameJoltAPI_GetGamePrivateKey();
	GAMEJOLTPLUGIN_API class UFunction* Z_Construct_UFunction_UUEGameJoltAPI_GetIMGURL();
	GAMEJOLTPLUGIN_API class UFunction* Z_Construct_UFunction_UUEGameJoltAPI_GetInt();
	GAMEJOLTPLUGIN_API class UFunction* Z_Construct_UFunction_UUEGameJoltAPI_GetObject();
	GAMEJOLTPLUGIN_API class UFunction* Z_Construct_UFunction_UUEGameJoltAPI_GetObjectArray();
	GAMEJOLTPLUGIN_API class UFunction* Z_Construct_UFunction_UUEGameJoltAPI_GetObjectKeys();
	GAMEJOLTPLUGIN_API class UFunction* Z_Construct_UFunction_UUEGameJoltAPI_GetScoreboard();
	GAMEJOLTPLUGIN_API class UFunction* Z_Construct_UFunction_UUEGameJoltAPI_GetScoreboardTable();
	GAMEJOLTPLUGIN_API class UFunction* Z_Construct_UFunction_UUEGameJoltAPI_GetString();
	GAMEJOLTPLUGIN_API class UFunction* Z_Construct_UFunction_UUEGameJoltAPI_GetTrophies();
	GAMEJOLTPLUGIN_API class UFunction* Z_Construct_UFunction_UUEGameJoltAPI_GetUsername();
	GAMEJOLTPLUGIN_API class UFunction* Z_Construct_UFunction_UUEGameJoltAPI_GetUserToken();
	GAMEJOLTPLUGIN_API class UFunction* Z_Construct_UFunction_UUEGameJoltAPI_isUserAuthorize();
	GAMEJOLTPLUGIN_API class UFunction* Z_Construct_UFunction_UUEGameJoltAPI_LogInStatus();
	GAMEJOLTPLUGIN_API class UFunction* Z_Construct_UFunction_UUEGameJoltAPI_LogOffUser();
	GAMEJOLTPLUGIN_API class UFunction* Z_Construct_UFunction_UUEGameJoltAPI_RewardTrophy();
	GAMEJOLTPLUGIN_API class UFunction* Z_Construct_UFunction_UUEGameJoltAPI_SendRequest();
	GAMEJOLTPLUGIN_API class UFunction* Z_Construct_UFunction_UUEGameJoltAPI_SetGameID();
	GAMEJOLTPLUGIN_API class UFunction* Z_Construct_UFunction_UUEGameJoltAPI_SetGamePrivateKey();
	GAMEJOLTPLUGIN_API class UFunction* Z_Construct_UFunction_UUEGameJoltAPI_SetUserName();
	GAMEJOLTPLUGIN_API class UFunction* Z_Construct_UFunction_UUEGameJoltAPI_SetUserToken();
	GAMEJOLTPLUGIN_API class UClass* Z_Construct_UClass_UUEGameJoltAPI_NoRegister();
	GAMEJOLTPLUGIN_API class UClass* Z_Construct_UClass_UUEGameJoltAPI();
	GAMEJOLTPLUGIN_API class UPackage* Z_Construct_UPackage_GameJoltPlugin();
	UFunction* Z_Construct_UDelegateFunction_GameJoltPlugin_OnFailed__DelegateSignature()
	{
		UObject* Outer=Z_Construct_UPackage_GameJoltPlugin();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnFailed__DelegateSignature"), RF_Public|RF_Transient|RF_Native) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnFailed event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameJoltPlugin_OnGetResult__DelegateSignature()
	{
		UObject* Outer=Z_Construct_UPackage_GameJoltPlugin();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnGetResult__DelegateSignature"), RF_Public|RF_Transient|RF_Native) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UEnum* Z_Construct_UEnum_GameJoltPlugin_EGameJoltAchievedTrophies()
	{
		UPackage* Outer=Z_Construct_UPackage_GameJoltPlugin();
		static UEnum* ReturnEnum = NULL;
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EGameJoltAchievedTrophies"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<FName> EnumNames;
			EnumNames.Add(FName(TEXT("EGameJoltAchievedTrophies::GJ_ACHIEVEDTROPHY_BLANK")));
			EnumNames.Add(FName(TEXT("EGameJoltAchievedTrophies::GJ_ACHIEVEDTROPHY_USER")));
			EnumNames.Add(FName(TEXT("EGameJoltAchievedTrophies::GJ_ACHIEVEDTROPHY_GAME")));
			EnumNames.Add(FName(TEXT("EGameJoltAchievedTrophies::GJ_ACHIEVEDTROPHY_MAX")));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("GJ_ACHIEVEDTROPHY_BLANK.DisplayName"), TEXT("All Trophies"));
			MetaData->SetValue(ReturnEnum, TEXT("GJ_ACHIEVEDTROPHY_GAME.DisplayName"), TEXT("Unachieved Trophies"));
			MetaData->SetValue(ReturnEnum, TEXT("GJ_ACHIEVEDTROPHY_USER.DisplayName"), TEXT("User Achieved Trophies"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("\"BlueprintType\" is essential to include"));
#endif
		}
		return ReturnEnum;
	}
	UEnum* Z_Construct_UEnum_GameJoltPlugin_EGameJoltComponentEnum()
	{
		UPackage* Outer=Z_Construct_UPackage_GameJoltPlugin();
		static UEnum* ReturnEnum = NULL;
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EGameJoltComponentEnum"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<FName> EnumNames;
			EnumNames.Add(FName(TEXT("EGameJoltComponentEnum::GJ_USER_AUTH")));
			EnumNames.Add(FName(TEXT("EGameJoltComponentEnum::GJ_USER_FETCH")));
			EnumNames.Add(FName(TEXT("EGameJoltComponentEnum::GJ_SESSION_OPEN")));
			EnumNames.Add(FName(TEXT("EGameJoltComponentEnum::GJ_SESSION_PING")));
			EnumNames.Add(FName(TEXT("EGameJoltComponentEnum::GJ_SESSION_CLOSE")));
			EnumNames.Add(FName(TEXT("EGameJoltComponentEnum::GJ_TROPHIES_FETCH")));
			EnumNames.Add(FName(TEXT("EGameJoltComponentEnum::GJ_TROPHIES_ADD")));
			EnumNames.Add(FName(TEXT("EGameJoltComponentEnum::GJ_SCORES_FETCH")));
			EnumNames.Add(FName(TEXT("EGameJoltComponentEnum::GJ_SCORES_ADD")));
			EnumNames.Add(FName(TEXT("EGameJoltComponentEnum::GJ_SCORES_TABLE")));
			EnumNames.Add(FName(TEXT("EGameJoltComponentEnum::GJ_DATASTORE_FETCH")));
			EnumNames.Add(FName(TEXT("EGameJoltComponentEnum::GJ_DATASTORE_SET")));
			EnumNames.Add(FName(TEXT("EGameJoltComponentEnum::GJ_DATASTORE_UPDATE")));
			EnumNames.Add(FName(TEXT("EGameJoltComponentEnum::GJ_DATASTORE_REMOVE")));
			EnumNames.Add(FName(TEXT("EGameJoltComponentEnum::GJ_OTHER")));
			EnumNames.Add(FName(TEXT("EGameJoltComponentEnum::GJ_MAX")));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("GJ_DATASTORE_FETCH.DisplayName"), TEXT("Fetch Data Store"));
			MetaData->SetValue(ReturnEnum, TEXT("GJ_DATASTORE_REMOVE.DisplayName"), TEXT("Get Keys"));
			MetaData->SetValue(ReturnEnum, TEXT("GJ_DATASTORE_SET.DisplayName"), TEXT("Set Data Store"));
			MetaData->SetValue(ReturnEnum, TEXT("GJ_DATASTORE_UPDATE.DisplayName"), TEXT("Update Data Store"));
			MetaData->SetValue(ReturnEnum, TEXT("GJ_OTHER.DisplayName"), TEXT("Other"));
			MetaData->SetValue(ReturnEnum, TEXT("GJ_SCORES_ADD.DisplayName"), TEXT("Add Score"));
			MetaData->SetValue(ReturnEnum, TEXT("GJ_SCORES_FETCH.DisplayName"), TEXT("Fetch Score"));
			MetaData->SetValue(ReturnEnum, TEXT("GJ_SCORES_TABLE.DisplayName"), TEXT("Get Score Tables"));
			MetaData->SetValue(ReturnEnum, TEXT("GJ_SESSION_CLOSE.DisplayName"), TEXT("Close Session"));
			MetaData->SetValue(ReturnEnum, TEXT("GJ_SESSION_OPEN.DisplayName"), TEXT("Open Session"));
			MetaData->SetValue(ReturnEnum, TEXT("GJ_SESSION_PING.DisplayName"), TEXT("Ping Session"));
			MetaData->SetValue(ReturnEnum, TEXT("GJ_TROPHIES_ADD.DisplayName"), TEXT("Add Achieved Trophies"));
			MetaData->SetValue(ReturnEnum, TEXT("GJ_TROPHIES_FETCH.DisplayName"), TEXT("Fetch Trophies"));
			MetaData->SetValue(ReturnEnum, TEXT("GJ_USER_AUTH.DisplayName"), TEXT("Authorize User"));
			MetaData->SetValue(ReturnEnum, TEXT("GJ_USER_FETCH.DisplayName"), TEXT("Fetch User"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("\"BlueprintType\" is essential to include"));
#endif
		}
		return ReturnEnum;
	}
	UScriptStruct* Z_Construct_UScriptStruct_FScoreTableInfo()
	{
		UPackage* Outer=Z_Construct_UPackage_GameJoltPlugin();
		static UScriptStruct* ReturnStruct = NULL;
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ScoreTableInfo"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FScoreTableInfo>, EStructFlags(0x00000001));
			UProperty* NewProp_Primary = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Primary"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(Primary, FScoreTableInfo), 0x0000000000000005);
			UProperty* NewProp_Description = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Description"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(Description, FScoreTableInfo), 0x0000000000000005);
			UProperty* NewProp_Name = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Name"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(Name, FScoreTableInfo), 0x0000000000000005);
			UProperty* NewProp_Id = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Id"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(Id, FScoreTableInfo), 0x0000000000000005);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(NewProp_Primary, TEXT("Category"), TEXT("Scoreboard Table Primary"));
			MetaData->SetValue(NewProp_Primary, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
			MetaData->SetValue(NewProp_Description, TEXT("Category"), TEXT("Scoreboard Table Description"));
			MetaData->SetValue(NewProp_Description, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
			MetaData->SetValue(NewProp_Name, TEXT("Category"), TEXT("Scoreboard Table Name"));
			MetaData->SetValue(NewProp_Name, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
			MetaData->SetValue(NewProp_Id, TEXT("Category"), TEXT("Scoreboard Table ID"));
			MetaData->SetValue(NewProp_Id, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FScoreTableInfo_CRC() { return 271760318U; }
	UScriptStruct* Z_Construct_UScriptStruct_FScoreInfo()
	{
		UPackage* Outer=Z_Construct_UPackage_GameJoltPlugin();
		static UScriptStruct* ReturnStruct = NULL;
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ScoreInfo"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FScoreInfo>, EStructFlags(0x00000001));
			UProperty* NewProp_stored = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("stored"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(stored, FScoreInfo), 0x0000000000000005);
			UProperty* NewProp_guestUser = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("guestUser"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(guestUser, FScoreInfo), 0x0000000000000005);
			UProperty* NewProp_User_Id = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("User_Id"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(User_Id, FScoreInfo), 0x0000000000000005);
			UProperty* NewProp_UserName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("UserName"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(UserName, FScoreInfo), 0x0000000000000005);
			UProperty* NewProp_extra_data = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("extra_data"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(extra_data, FScoreInfo), 0x0000000000000005);
			UProperty* NewProp_ScoreSort = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScoreSort"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(ScoreSort, FScoreInfo), 0x0000000000000005);
			UProperty* NewProp_ScoreString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScoreString"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(ScoreString, FScoreInfo), 0x0000000000000005);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(NewProp_stored, TEXT("Category"), TEXT("Score Stored"));
			MetaData->SetValue(NewProp_stored, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
			MetaData->SetValue(NewProp_guestUser, TEXT("Category"), TEXT("Score Guest Username"));
			MetaData->SetValue(NewProp_guestUser, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
			MetaData->SetValue(NewProp_User_Id, TEXT("Category"), TEXT("Score User ID"));
			MetaData->SetValue(NewProp_User_Id, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
			MetaData->SetValue(NewProp_UserName, TEXT("Category"), TEXT("Score Username"));
			MetaData->SetValue(NewProp_UserName, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
			MetaData->SetValue(NewProp_extra_data, TEXT("Category"), TEXT("Score Extra Data"));
			MetaData->SetValue(NewProp_extra_data, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
			MetaData->SetValue(NewProp_ScoreSort, TEXT("Category"), TEXT("Score Sort"));
			MetaData->SetValue(NewProp_ScoreSort, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
			MetaData->SetValue(NewProp_ScoreString, TEXT("Category"), TEXT("Score String"));
			MetaData->SetValue(NewProp_ScoreString, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FScoreInfo_CRC() { return 3205383195U; }
	UScriptStruct* Z_Construct_UScriptStruct_FTrophyInfo()
	{
		UPackage* Outer=Z_Construct_UPackage_GameJoltPlugin();
		static UScriptStruct* ReturnStruct = NULL;
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("TrophyInfo"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FTrophyInfo>, EStructFlags(0x00000001));
			UProperty* NewProp_achieved = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("achieved"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(achieved, FTrophyInfo), 0x0000000000000005);
			UProperty* NewProp_image_url = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("image_url"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(image_url, FTrophyInfo), 0x0000000000000005);
			UProperty* NewProp_Difficulty = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Difficulty"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(Difficulty, FTrophyInfo), 0x0000000000000005);
			UProperty* NewProp_Description = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Description"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(Description, FTrophyInfo), 0x0000000000000005);
			UProperty* NewProp_Name = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Name"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(Name, FTrophyInfo), 0x0000000000000005);
			UProperty* NewProp_Trophy_ID = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Trophy_ID"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(Trophy_ID, FTrophyInfo), 0x0000000000000005);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(NewProp_achieved, TEXT("Category"), TEXT("Achieved Time"));
			MetaData->SetValue(NewProp_achieved, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
			MetaData->SetValue(NewProp_image_url, TEXT("Category"), TEXT("Trophy's Image URL"));
			MetaData->SetValue(NewProp_image_url, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
			MetaData->SetValue(NewProp_Difficulty, TEXT("Category"), TEXT("Trophy's Difficulty"));
			MetaData->SetValue(NewProp_Difficulty, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
			MetaData->SetValue(NewProp_Description, TEXT("Category"), TEXT("Trophy's Description"));
			MetaData->SetValue(NewProp_Description, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
			MetaData->SetValue(NewProp_Name, TEXT("Category"), TEXT("Trophy's Name"));
			MetaData->SetValue(NewProp_Name, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
			MetaData->SetValue(NewProp_Trophy_ID, TEXT("Category"), TEXT("Trophy ID"));
			MetaData->SetValue(NewProp_Trophy_ID, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FTrophyInfo_CRC() { return 1071439220U; }
	UScriptStruct* Z_Construct_UScriptStruct_FUserInfo()
	{
		UPackage* Outer=Z_Construct_UPackage_GameJoltPlugin();
		static UScriptStruct* ReturnStruct = NULL;
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("UserInfo"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FUserInfo>, EStructFlags(0x00000001));
			UProperty* NewProp_status = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("status"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(status, FUserInfo), 0x0000000000000005);
			UProperty* NewProp_Last_Logged_in = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Last_Logged_in"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(Last_Logged_in, FUserInfo), 0x0000000000000005);
			UProperty* NewProp_Signed_up = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Signed_up"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(Signed_up, FUserInfo), 0x0000000000000005);
			UProperty* NewProp_User_AvatarURL = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("User_AvatarURL"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(User_AvatarURL, FUserInfo), 0x0000000000000005);
			UProperty* NewProp_User_Name = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("User_Name"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(User_Name, FUserInfo), 0x0000000000000005);
			UProperty* NewProp_User_Type = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("User_Type"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(User_Type, FUserInfo), 0x0000000000000005);
			UProperty* NewProp_S_User_ID = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("S_User_ID"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(S_User_ID, FUserInfo), 0x0000000000000005);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(NewProp_status, TEXT("Category"), TEXT("User Status"));
			MetaData->SetValue(NewProp_status, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
			MetaData->SetValue(NewProp_Last_Logged_in, TEXT("Category"), TEXT("User Last Logged in"));
			MetaData->SetValue(NewProp_Last_Logged_in, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
			MetaData->SetValue(NewProp_Signed_up, TEXT("Category"), TEXT("User Signed up"));
			MetaData->SetValue(NewProp_Signed_up, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
			MetaData->SetValue(NewProp_User_AvatarURL, TEXT("Category"), TEXT("User Avatar"));
			MetaData->SetValue(NewProp_User_AvatarURL, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
			MetaData->SetValue(NewProp_User_Name, TEXT("Category"), TEXT("Username"));
			MetaData->SetValue(NewProp_User_Name, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
			MetaData->SetValue(NewProp_User_Type, TEXT("Category"), TEXT("User type"));
			MetaData->SetValue(NewProp_User_Type, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
			MetaData->SetValue(NewProp_S_User_ID, TEXT("Category"), TEXT("User ID"));
			MetaData->SetValue(NewProp_S_User_ID, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FUserInfo_CRC() { return 1664667977U; }
	UFunction* Z_Construct_UFunction_UUEGameJoltAPI_AddScore()
	{
		struct UEGameJoltAPI_eventAddScore_Parms
		{
			FString UserScore;
			int32 UserScore_Sort;
			int32 Scoreboard_ID;
			FString GuestUser;
			FString extra_data;
			int32 table_id;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UUEGameJoltAPI();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AddScore"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(UEGameJoltAPI_eventAddScore_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, UEGameJoltAPI_eventAddScore_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, UEGameJoltAPI_eventAddScore_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, UEGameJoltAPI_eventAddScore_Parms), sizeof(bool), true);
			UProperty* NewProp_table_id = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("table_id"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(table_id, UEGameJoltAPI_eventAddScore_Parms), 0x0000000000000080);
			UProperty* NewProp_extra_data = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("extra_data"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(extra_data, UEGameJoltAPI_eventAddScore_Parms), 0x0000000000000080);
			UProperty* NewProp_GuestUser = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("GuestUser"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(GuestUser, UEGameJoltAPI_eventAddScore_Parms), 0x0000000000000080);
			UProperty* NewProp_Scoreboard_ID = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Scoreboard_ID"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(Scoreboard_ID, UEGameJoltAPI_eventAddScore_Parms), 0x0000000000000080);
			UProperty* NewProp_UserScore_Sort = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("UserScore_Sort"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(UserScore_Sort, UEGameJoltAPI_eventAddScore_Parms), 0x0000000000000080);
			UProperty* NewProp_UserScore = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("UserScore"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(UserScore, UEGameJoltAPI_eventAddScore_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameJolt"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Add Score to Scoreboard"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UUEGameJoltAPI_AuthUser()
	{
		struct UEGameJoltAPI_eventAuthUser_Parms
		{
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UUEGameJoltAPI();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AuthUser"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(UEGameJoltAPI_eventAuthUser_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, UEGameJoltAPI_eventAuthUser_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, UEGameJoltAPI_eventAuthUser_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, UEGameJoltAPI_eventAuthUser_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameJolt"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Login User"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Login"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UUEGameJoltAPI_Char2Hex()
	{
		struct UEGameJoltAPI_eventChar2Hex_Parms
		{
			FString character;
			int32 index;
			FString ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UUEGameJoltAPI();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Char2Hex"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(UEGameJoltAPI_eventChar2Hex_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(ReturnValue, UEGameJoltAPI_eventChar2Hex_Parms), 0x0000000000000580);
			UProperty* NewProp_index = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("index"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(index, UEGameJoltAPI_eventChar2Hex_Parms), 0x0000000000000080);
			UProperty* NewProp_character = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("character"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(character, UEGameJoltAPI_eventChar2Hex_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameJolt"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Char to Hex"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UUEGameJoltAPI_Create()
	{
		struct UEGameJoltAPI_eventCreate_Parms
		{
			UObject* WorldContextObject;
			UUEGameJoltAPI* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UUEGameJoltAPI();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Create"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14022401, 65535, sizeof(UEGameJoltAPI_eventCreate_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, UEGameJoltAPI_eventCreate_Parms), 0x0000000000000580, Z_Construct_UClass_UUEGameJoltAPI_NoRegister());
			UProperty* NewProp_WorldContextObject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContextObject"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(WorldContextObject, UEGameJoltAPI_eventCreate_Parms), 0x0000000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameJolt"));
			MetaData->SetValue(ReturnFunction, TEXT("DefaultToSelf"), TEXT("WorldContextObject"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Create GameJolt API Data"));
			MetaData->SetValue(ReturnFunction, TEXT("HidePin"), TEXT("WorldContextObject"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Creates a new post data object"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UUEGameJoltAPI_EncodeURL()
	{
		struct UEGameJoltAPI_eventEncodeURL_Parms
		{
			FString inputString;
			FString ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UUEGameJoltAPI();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EncodeURL"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(UEGameJoltAPI_eventEncodeURL_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(ReturnValue, UEGameJoltAPI_eventEncodeURL_Parms), 0x0000000000000580);
			UProperty* NewProp_inputString = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("inputString"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(inputString, UEGameJoltAPI_eventEncodeURL_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameJolt"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Encode URL"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UUEGameJoltAPI_FetchArrayUsers()
	{
		struct UEGameJoltAPI_eventFetchArrayUsers_Parms
		{
			TArray<FUserInfo> ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UUEGameJoltAPI();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("FetchArrayUsers"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(UEGameJoltAPI_eventFetchArrayUsers_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(ReturnValue, UEGameJoltAPI_eventFetchArrayUsers_Parms), 0x0000000000000580);
			UProperty* NewProp_ReturnValue_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ReturnValue, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FUserInfo());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameJolt"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Array of Users"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UUEGameJoltAPI_FetchScoreboard()
	{
		struct UEGameJoltAPI_eventFetchScoreboard_Parms
		{
			int32 ScoreLimit;
			int32 Table_id;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UUEGameJoltAPI();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("FetchScoreboard"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(UEGameJoltAPI_eventFetchScoreboard_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, UEGameJoltAPI_eventFetchScoreboard_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, UEGameJoltAPI_eventFetchScoreboard_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, UEGameJoltAPI_eventFetchScoreboard_Parms), sizeof(bool), true);
			UProperty* NewProp_Table_id = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Table_id"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(Table_id, UEGameJoltAPI_eventFetchScoreboard_Parms), 0x0000000000000080);
			UProperty* NewProp_ScoreLimit = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScoreLimit"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(ScoreLimit, UEGameJoltAPI_eventFetchScoreboard_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameJolt"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Fetch Scoreboard"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Score Stuff"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UUEGameJoltAPI_FetchScoreboardTable()
	{
		struct UEGameJoltAPI_eventFetchScoreboardTable_Parms
		{
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UUEGameJoltAPI();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("FetchScoreboardTable"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(UEGameJoltAPI_eventFetchScoreboardTable_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, UEGameJoltAPI_eventFetchScoreboardTable_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, UEGameJoltAPI_eventFetchScoreboardTable_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, UEGameJoltAPI_eventFetchScoreboardTable_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameJolt"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Fetch Scoreboard Table"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UUEGameJoltAPI_FetchTrophies()
	{
		struct UEGameJoltAPI_eventFetchTrophies_Parms
		{
			TEnumAsByte<EGameJoltAchievedTrophies> AchievedType;
			TArray<int32> Trophies_ID;
		};
		UObject* Outer=Z_Construct_UClass_UUEGameJoltAPI();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("FetchTrophies"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(UEGameJoltAPI_eventFetchTrophies_Parms));
			UProperty* NewProp_Trophies_ID = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Trophies_ID"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(Trophies_ID, UEGameJoltAPI_eventFetchTrophies_Parms), 0x0000000000000080);
			UProperty* NewProp_Trophies_ID_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Trophies_ID, TEXT("Trophies_ID"), RF_Public|RF_Transient|RF_Native) UIntProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			UProperty* NewProp_AchievedType = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AchievedType"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(AchievedType, UEGameJoltAPI_eventFetchTrophies_Parms), 0x0000000000000080, Z_Construct_UEnum_GameJoltPlugin_EGameJoltAchievedTrophies());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameJolt"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Fetch Trophies"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UUEGameJoltAPI_FetchUser()
	{
		struct UEGameJoltAPI_eventFetchUser_Parms
		{
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UUEGameJoltAPI();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("FetchUser"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(UEGameJoltAPI_eventFetchUser_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, UEGameJoltAPI_eventFetchUser_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, UEGameJoltAPI_eventFetchUser_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, UEGameJoltAPI_eventFetchUser_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameJolt"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Fetch Users"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UUEGameJoltAPI_FromString()
	{
		struct UEGameJoltAPI_eventFromString_Parms
		{
			FString dataString;
		};
		UObject* Outer=Z_Construct_UClass_UUEGameJoltAPI();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("FromString"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(UEGameJoltAPI_eventFromString_Parms));
			UProperty* NewProp_dataString = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("dataString"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(dataString, UEGameJoltAPI_eventFromString_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameJolt"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("From String"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Creates new data from the input string"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UUEGameJoltAPI_GetBool()
	{
		struct UEGameJoltAPI_eventGetBool_Parms
		{
			FString key;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UUEGameJoltAPI();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetBool"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(UEGameJoltAPI_eventGetBool_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, UEGameJoltAPI_eventGetBool_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, UEGameJoltAPI_eventGetBool_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, UEGameJoltAPI_eventGetBool_Parms), sizeof(bool), true);
			UProperty* NewProp_key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("key"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(key, UEGameJoltAPI_eventGetBool_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameJolt"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Bool Field"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Gets string data from the post data"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UUEGameJoltAPI_GetGameID()
	{
		struct UEGameJoltAPI_eventGetGameID_Parms
		{
			int32 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UUEGameJoltAPI();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetGameID"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(UEGameJoltAPI_eventGetGameID_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(ReturnValue, UEGameJoltAPI_eventGetGameID_Parms), 0x0000000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameJolt"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Your Game ID"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Public Functions"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UUEGameJoltAPI_GetGamePrivateKey()
	{
		struct UEGameJoltAPI_eventGetGamePrivateKey_Parms
		{
			FString ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UUEGameJoltAPI();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetGamePrivateKey"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(UEGameJoltAPI_eventGetGamePrivateKey_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(ReturnValue, UEGameJoltAPI_eventGetGamePrivateKey_Parms), 0x0000000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameJolt"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Your Game Private Key"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UUEGameJoltAPI_GetIMGURL()
	{
		struct UEGameJoltAPI_eventGetIMGURL_Parms
		{
			FString output;
			FString url;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UUEGameJoltAPI();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetIMGURL"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(UEGameJoltAPI_eventGetIMGURL_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, UEGameJoltAPI_eventGetIMGURL_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, UEGameJoltAPI_eventGetIMGURL_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, UEGameJoltAPI_eventGetIMGURL_Parms), sizeof(bool), true);
			UProperty* NewProp_url = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("url"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(url, UEGameJoltAPI_eventGetIMGURL_Parms), 0x0000000000000080);
			UProperty* NewProp_output = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("output"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(output, UEGameJoltAPI_eventGetIMGURL_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameJolt"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Image from URL"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UUEGameJoltAPI_GetInt()
	{
		struct UEGameJoltAPI_eventGetInt_Parms
		{
			FString key;
			int32 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UUEGameJoltAPI();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetInt"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(UEGameJoltAPI_eventGetInt_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(ReturnValue, UEGameJoltAPI_eventGetInt_Parms), 0x0000000000000580);
			UProperty* NewProp_key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("key"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(key, UEGameJoltAPI_eventGetInt_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameJolt"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Int Field"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UUEGameJoltAPI_GetObject()
	{
		struct UEGameJoltAPI_eventGetObject_Parms
		{
			FString key;
			UUEGameJoltAPI* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UUEGameJoltAPI();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetObject"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(UEGameJoltAPI_eventGetObject_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, UEGameJoltAPI_eventGetObject_Parms), 0x0000000000000580, Z_Construct_UClass_UUEGameJoltAPI_NoRegister());
			UProperty* NewProp_key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("key"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(key, UEGameJoltAPI_eventGetObject_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameJolt"));
			MetaData->SetValue(ReturnFunction, TEXT("DefaultToSelf"), TEXT("WorldContextObject"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Data Field"));
			MetaData->SetValue(ReturnFunction, TEXT("HidePin"), TEXT("WorldContextObject"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Fetches nested post data from the post data"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UUEGameJoltAPI_GetObjectArray()
	{
		struct UEGameJoltAPI_eventGetObjectArray_Parms
		{
			UObject* WorldContextObject;
			FString key;
			TArray<UUEGameJoltAPI*> ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UUEGameJoltAPI();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetObjectArray"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(UEGameJoltAPI_eventGetObjectArray_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(ReturnValue, UEGameJoltAPI_eventGetObjectArray_Parms), 0x0000000000000580);
			UProperty* NewProp_ReturnValue_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ReturnValue, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_UUEGameJoltAPI_NoRegister());
			UProperty* NewProp_key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("key"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(key, UEGameJoltAPI_eventGetObjectArray_Parms), 0x0000000000000080);
			UProperty* NewProp_WorldContextObject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContextObject"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(WorldContextObject, UEGameJoltAPI_eventGetObjectArray_Parms), 0x0000000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameJolt"));
			MetaData->SetValue(ReturnFunction, TEXT("DefaultToSelf"), TEXT("WorldContextObject"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Object Array Field"));
			MetaData->SetValue(ReturnFunction, TEXT("HidePin"), TEXT("WorldContextObject"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Gets an array with post data with the specified key"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UUEGameJoltAPI_GetObjectKeys()
	{
		struct UEGameJoltAPI_eventGetObjectKeys_Parms
		{
			UObject* WorldContextObject;
			TArray<FString> ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UUEGameJoltAPI();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetObjectKeys"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(UEGameJoltAPI_eventGetObjectKeys_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(ReturnValue, UEGameJoltAPI_eventGetObjectKeys_Parms), 0x0000000000000580);
			UProperty* NewProp_ReturnValue_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ReturnValue, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UStrProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			UProperty* NewProp_WorldContextObject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContextObject"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(WorldContextObject, UEGameJoltAPI_eventGetObjectKeys_Parms), 0x0000000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameJolt"));
			MetaData->SetValue(ReturnFunction, TEXT("DefaultToSelf"), TEXT("WorldContextObject"));
			MetaData->SetValue(ReturnFunction, TEXT("Displayname"), TEXT("Get Object Keys"));
			MetaData->SetValue(ReturnFunction, TEXT("HidePin"), TEXT("WorldContextObject"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get all keys from the object"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UUEGameJoltAPI_GetScoreboard()
	{
		struct UEGameJoltAPI_eventGetScoreboard_Parms
		{
			TArray<FScoreInfo> ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UUEGameJoltAPI();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetScoreboard"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(UEGameJoltAPI_eventGetScoreboard_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(ReturnValue, UEGameJoltAPI_eventGetScoreboard_Parms), 0x0000000000000580);
			UProperty* NewProp_ReturnValue_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ReturnValue, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FScoreInfo());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameJolt"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Scoreboard"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UUEGameJoltAPI_GetScoreboardTable()
	{
		struct UEGameJoltAPI_eventGetScoreboardTable_Parms
		{
			TArray<FScoreTableInfo> ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UUEGameJoltAPI();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetScoreboardTable"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(UEGameJoltAPI_eventGetScoreboardTable_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(ReturnValue, UEGameJoltAPI_eventGetScoreboardTable_Parms), 0x0000000000000580);
			UProperty* NewProp_ReturnValue_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ReturnValue, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FScoreTableInfo());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameJolt"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Scoreboard Table"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UUEGameJoltAPI_GetString()
	{
		struct UEGameJoltAPI_eventGetString_Parms
		{
			FString key;
			FString ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UUEGameJoltAPI();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetString"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(UEGameJoltAPI_eventGetString_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(ReturnValue, UEGameJoltAPI_eventGetString_Parms), 0x0000000000000580);
			UProperty* NewProp_key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("key"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(key, UEGameJoltAPI_eventGetString_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameJolt"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get String Field"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Gets string data from the post data"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UUEGameJoltAPI_GetTrophies()
	{
		struct UEGameJoltAPI_eventGetTrophies_Parms
		{
			TArray<FTrophyInfo> ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UUEGameJoltAPI();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetTrophies"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(UEGameJoltAPI_eventGetTrophies_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(ReturnValue, UEGameJoltAPI_eventGetTrophies_Parms), 0x0000000000000580);
			UProperty* NewProp_ReturnValue_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ReturnValue, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FTrophyInfo());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameJolt"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Trophies"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UUEGameJoltAPI_GetUsername()
	{
		struct UEGameJoltAPI_eventGetUsername_Parms
		{
			FString ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UUEGameJoltAPI();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetUsername"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(UEGameJoltAPI_eventGetUsername_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(ReturnValue, UEGameJoltAPI_eventGetUsername_Parms), 0x0000000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameJolt"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Username"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UUEGameJoltAPI_GetUserToken()
	{
		struct UEGameJoltAPI_eventGetUserToken_Parms
		{
			FString ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UUEGameJoltAPI();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetUserToken"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(UEGameJoltAPI_eventGetUserToken_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(ReturnValue, UEGameJoltAPI_eventGetUserToken_Parms), 0x0000000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameJolt"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get User Token"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UUEGameJoltAPI_isUserAuthorize()
	{
		struct UEGameJoltAPI_eventisUserAuthorize_Parms
		{
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UUEGameJoltAPI();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("isUserAuthorize"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(UEGameJoltAPI_eventisUserAuthorize_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, UEGameJoltAPI_eventisUserAuthorize_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, UEGameJoltAPI_eventisUserAuthorize_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, UEGameJoltAPI_eventisUserAuthorize_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameJolt"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Is User Login"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UUEGameJoltAPI_LogInStatus()
	{
		UObject* Outer=Z_Construct_UClass_UUEGameJoltAPI();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("LogInStatus"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameJolt"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Login Status"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UUEGameJoltAPI_LogOffUser()
	{
		UObject* Outer=Z_Construct_UClass_UUEGameJoltAPI();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("LogOffUser"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameJolt"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Logoff User"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UUEGameJoltAPI_RewardTrophy()
	{
		struct UEGameJoltAPI_eventRewardTrophy_Parms
		{
			int32 Trophy_ID;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UUEGameJoltAPI();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("RewardTrophy"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(UEGameJoltAPI_eventRewardTrophy_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, UEGameJoltAPI_eventRewardTrophy_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, UEGameJoltAPI_eventRewardTrophy_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, UEGameJoltAPI_eventRewardTrophy_Parms), sizeof(bool), true);
			UProperty* NewProp_Trophy_ID = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Trophy_ID"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(Trophy_ID, UEGameJoltAPI_eventRewardTrophy_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameJolt"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Reward Trophies"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Trophies Stuff"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UUEGameJoltAPI_SendRequest()
	{
		struct UEGameJoltAPI_eventSendRequest_Parms
		{
			FString output;
			FString url;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UUEGameJoltAPI();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendRequest"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(UEGameJoltAPI_eventSendRequest_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, UEGameJoltAPI_eventSendRequest_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, UEGameJoltAPI_eventSendRequest_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, UEGameJoltAPI_eventSendRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_url = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("url"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(url, UEGameJoltAPI_eventSendRequest_Parms), 0x0000000000000080);
			UProperty* NewProp_output = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("output"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(output, UEGameJoltAPI_eventSendRequest_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameJolt"));
			MetaData->SetValue(ReturnFunction, TEXT("Displayname"), TEXT("Send Request"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Utilty Functions."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UUEGameJoltAPI_SetGameID()
	{
		struct UEGameJoltAPI_eventSetGameID_Parms
		{
			int32 f_game_ID;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UUEGameJoltAPI();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetGameID"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(UEGameJoltAPI_eventSetGameID_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, UEGameJoltAPI_eventSetGameID_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, UEGameJoltAPI_eventSetGameID_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, UEGameJoltAPI_eventSetGameID_Parms), sizeof(bool), true);
			UProperty* NewProp_f_game_ID = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("f_game_ID"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(f_game_ID, UEGameJoltAPI_eventSetGameID_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameJolt"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Set Your Game ID"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UUEGameJoltAPI_SetGamePrivateKey()
	{
		struct UEGameJoltAPI_eventSetGamePrivateKey_Parms
		{
			FString f_game_PrivateKey;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UUEGameJoltAPI();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetGamePrivateKey"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(UEGameJoltAPI_eventSetGamePrivateKey_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, UEGameJoltAPI_eventSetGamePrivateKey_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, UEGameJoltAPI_eventSetGamePrivateKey_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, UEGameJoltAPI_eventSetGamePrivateKey_Parms), sizeof(bool), true);
			UProperty* NewProp_f_game_PrivateKey = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("f_game_PrivateKey"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(f_game_PrivateKey, UEGameJoltAPI_eventSetGamePrivateKey_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameJolt"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Set Your Game Private Key"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UUEGameJoltAPI_SetUserName()
	{
		struct UEGameJoltAPI_eventSetUserName_Parms
		{
			FString f_Username;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UUEGameJoltAPI();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetUserName"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(UEGameJoltAPI_eventSetUserName_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, UEGameJoltAPI_eventSetUserName_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, UEGameJoltAPI_eventSetUserName_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, UEGameJoltAPI_eventSetUserName_Parms), sizeof(bool), true);
			UProperty* NewProp_f_Username = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("f_Username"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(f_Username, UEGameJoltAPI_eventSetUserName_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameJolt"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Set Username"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UUEGameJoltAPI_SetUserToken()
	{
		struct UEGameJoltAPI_eventSetUserToken_Parms
		{
			FString f_UserToken;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UUEGameJoltAPI();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetUserToken"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(UEGameJoltAPI_eventSetUserToken_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, UEGameJoltAPI_eventSetUserToken_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, UEGameJoltAPI_eventSetUserToken_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, UEGameJoltAPI_eventSetUserToken_Parms), sizeof(bool), true);
			UProperty* NewProp_f_UserToken = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("f_UserToken"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(f_UserToken, UEGameJoltAPI_eventSetUserToken_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameJolt"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Set User Token"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UUEGameJoltAPI_NoRegister()
	{
		return UUEGameJoltAPI::StaticClass();
	}
	UClass* Z_Construct_UClass_UUEGameJoltAPI()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_GameJoltPlugin();
			OuterClass = UUEGameJoltAPI::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UUEGameJoltAPI_AddScore());
				OuterClass->LinkChild(Z_Construct_UFunction_UUEGameJoltAPI_AuthUser());
				OuterClass->LinkChild(Z_Construct_UFunction_UUEGameJoltAPI_Char2Hex());
				OuterClass->LinkChild(Z_Construct_UFunction_UUEGameJoltAPI_Create());
				OuterClass->LinkChild(Z_Construct_UFunction_UUEGameJoltAPI_EncodeURL());
				OuterClass->LinkChild(Z_Construct_UFunction_UUEGameJoltAPI_FetchArrayUsers());
				OuterClass->LinkChild(Z_Construct_UFunction_UUEGameJoltAPI_FetchScoreboard());
				OuterClass->LinkChild(Z_Construct_UFunction_UUEGameJoltAPI_FetchScoreboardTable());
				OuterClass->LinkChild(Z_Construct_UFunction_UUEGameJoltAPI_FetchTrophies());
				OuterClass->LinkChild(Z_Construct_UFunction_UUEGameJoltAPI_FetchUser());
				OuterClass->LinkChild(Z_Construct_UFunction_UUEGameJoltAPI_FromString());
				OuterClass->LinkChild(Z_Construct_UFunction_UUEGameJoltAPI_GetBool());
				OuterClass->LinkChild(Z_Construct_UFunction_UUEGameJoltAPI_GetGameID());
				OuterClass->LinkChild(Z_Construct_UFunction_UUEGameJoltAPI_GetGamePrivateKey());
				OuterClass->LinkChild(Z_Construct_UFunction_UUEGameJoltAPI_GetIMGURL());
				OuterClass->LinkChild(Z_Construct_UFunction_UUEGameJoltAPI_GetInt());
				OuterClass->LinkChild(Z_Construct_UFunction_UUEGameJoltAPI_GetObject());
				OuterClass->LinkChild(Z_Construct_UFunction_UUEGameJoltAPI_GetObjectArray());
				OuterClass->LinkChild(Z_Construct_UFunction_UUEGameJoltAPI_GetObjectKeys());
				OuterClass->LinkChild(Z_Construct_UFunction_UUEGameJoltAPI_GetScoreboard());
				OuterClass->LinkChild(Z_Construct_UFunction_UUEGameJoltAPI_GetScoreboardTable());
				OuterClass->LinkChild(Z_Construct_UFunction_UUEGameJoltAPI_GetString());
				OuterClass->LinkChild(Z_Construct_UFunction_UUEGameJoltAPI_GetTrophies());
				OuterClass->LinkChild(Z_Construct_UFunction_UUEGameJoltAPI_GetUsername());
				OuterClass->LinkChild(Z_Construct_UFunction_UUEGameJoltAPI_GetUserToken());
				OuterClass->LinkChild(Z_Construct_UFunction_UUEGameJoltAPI_isUserAuthorize());
				OuterClass->LinkChild(Z_Construct_UFunction_UUEGameJoltAPI_LogInStatus());
				OuterClass->LinkChild(Z_Construct_UFunction_UUEGameJoltAPI_LogOffUser());
				OuterClass->LinkChild(Z_Construct_UFunction_UUEGameJoltAPI_RewardTrophy());
				OuterClass->LinkChild(Z_Construct_UFunction_UUEGameJoltAPI_SendRequest());
				OuterClass->LinkChild(Z_Construct_UFunction_UUEGameJoltAPI_SetGameID());
				OuterClass->LinkChild(Z_Construct_UFunction_UUEGameJoltAPI_SetGamePrivateKey());
				OuterClass->LinkChild(Z_Construct_UFunction_UUEGameJoltAPI_SetUserName());
				OuterClass->LinkChild(Z_Construct_UFunction_UUEGameJoltAPI_SetUserToken());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_GJAPI_VERSION = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("GJAPI_VERSION"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(GJAPI_VERSION, UUEGameJoltAPI), 0x0000000000000004);
				UProperty* NewProp_GJAPI_ROOT = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("GJAPI_ROOT"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(GJAPI_ROOT, UUEGameJoltAPI), 0x0000000000000004);
				UProperty* NewProp_GJAPI_SERVER = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("GJAPI_SERVER"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(GJAPI_SERVER, UUEGameJoltAPI), 0x0000000000000004);
				UProperty* NewProp_UserToken = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("UserToken"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(UserToken, UUEGameJoltAPI), 0x0000000000000014);
				UProperty* NewProp_UserName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("UserName"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(UserName, UUEGameJoltAPI), 0x0000000000000014);
				UProperty* NewProp_Game_PrivateKey = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Game_PrivateKey"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(Game_PrivateKey, UUEGameJoltAPI), 0x0000000000000014);
				UProperty* NewProp_Game_ID = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Game_ID"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(Game_ID, UUEGameJoltAPI), 0x0000000000000014);
				UProperty* NewProp_OnFailed = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnFailed"), RF_Public|RF_Transient|RF_Native) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnFailed, UUEGameJoltAPI), 0x0000000010080000, Z_Construct_UDelegateFunction_GameJoltPlugin_OnFailed__DelegateSignature());
				UProperty* NewProp_OnGetResult = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnGetResult"), RF_Public|RF_Transient|RF_Native) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnGetResult, UUEGameJoltAPI), 0x0000000010080000, Z_Construct_UDelegateFunction_GameJoltPlugin_OnGetResult__DelegateSignature());
				UProperty* NewProp_Content = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Content"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(Content, UUEGameJoltAPI), 0x0000000000020015);
				UProperty* NewProp_GameJoltComponentEnum = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("GameJoltComponentEnum"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(GameJoltComponentEnum, UUEGameJoltAPI), 0x0000000000000004, Z_Construct_UEnum_GameJoltPlugin_EGameJoltComponentEnum());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(m_LoggedIn, UUEGameJoltAPI, bool);
				UProperty* NewProp_m_LoggedIn = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("m_LoggedIn"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(m_LoggedIn, UUEGameJoltAPI), 0x0000000000000014, CPP_BOOL_PROPERTY_BITMASK(m_LoggedIn, UUEGameJoltAPI), sizeof(bool), true);
				UProperty* NewProp_Guest_username = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Guest_username"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(Guest_username, UUEGameJoltAPI), 0x0000000000000004);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bGuest, UUEGameJoltAPI, bool);
				UProperty* NewProp_bGuest = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bGuest"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bGuest, UUEGameJoltAPI), 0x0000000000000014, CPP_BOOL_PROPERTY_BITMASK(bGuest, UUEGameJoltAPI), sizeof(bool), true);
PRAGMA_POP
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UUEGameJoltAPI_AddScore()); // 2972372801
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UUEGameJoltAPI_AuthUser()); // 327645285
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UUEGameJoltAPI_Char2Hex()); // 371331494
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UUEGameJoltAPI_Create()); // 3240502713
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UUEGameJoltAPI_EncodeURL()); // 742771002
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UUEGameJoltAPI_FetchArrayUsers()); // 2407448847
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UUEGameJoltAPI_FetchScoreboard()); // 3975091460
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UUEGameJoltAPI_FetchScoreboardTable()); // 562304172
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UUEGameJoltAPI_FetchTrophies()); // 3940826993
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UUEGameJoltAPI_FetchUser()); // 2630941561
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UUEGameJoltAPI_FromString()); // 1362953146
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UUEGameJoltAPI_GetBool()); // 1945004336
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UUEGameJoltAPI_GetGameID()); // 2666926385
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UUEGameJoltAPI_GetGamePrivateKey()); // 1279185468
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UUEGameJoltAPI_GetIMGURL()); // 3837639581
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UUEGameJoltAPI_GetInt()); // 2640360675
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UUEGameJoltAPI_GetObject()); // 1925292029
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UUEGameJoltAPI_GetObjectArray()); // 933520965
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UUEGameJoltAPI_GetObjectKeys()); // 4266809720
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UUEGameJoltAPI_GetScoreboard()); // 605670019
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UUEGameJoltAPI_GetScoreboardTable()); // 1142593613
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UUEGameJoltAPI_GetString()); // 3399214143
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UUEGameJoltAPI_GetTrophies()); // 2860315414
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UUEGameJoltAPI_GetUsername()); // 561071766
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UUEGameJoltAPI_GetUserToken()); // 3228185287
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UUEGameJoltAPI_isUserAuthorize()); // 2889139494
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UUEGameJoltAPI_LogInStatus()); // 897624958
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UUEGameJoltAPI_LogOffUser()); // 3416137323
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UUEGameJoltAPI_RewardTrophy()); // 3323962596
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UUEGameJoltAPI_SendRequest()); // 1131895301
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UUEGameJoltAPI_SetGameID()); // 387555128
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UUEGameJoltAPI_SetGamePrivateKey()); // 860671232
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UUEGameJoltAPI_SetUserName()); // 3151410268
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UUEGameJoltAPI_SetUserToken()); // 2505224058
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("UEGameJoltAPI.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
				MetaData->SetValue(NewProp_GJAPI_VERSION, TEXT("Category"), TEXT("GameJolt"));
				MetaData->SetValue(NewProp_GJAPI_VERSION, TEXT("DisplayName"), TEXT("GameJolt API Version"));
				MetaData->SetValue(NewProp_GJAPI_VERSION, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
				MetaData->SetValue(NewProp_GJAPI_ROOT, TEXT("Category"), TEXT("GameJolt"));
				MetaData->SetValue(NewProp_GJAPI_ROOT, TEXT("DisplayName"), TEXT("GameJolt API Root"));
				MetaData->SetValue(NewProp_GJAPI_ROOT, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
				MetaData->SetValue(NewProp_GJAPI_SERVER, TEXT("Category"), TEXT("GameJolt"));
				MetaData->SetValue(NewProp_GJAPI_SERVER, TEXT("DisplayName"), TEXT("GameJolt API Server"));
				MetaData->SetValue(NewProp_GJAPI_SERVER, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
				MetaData->SetValue(NewProp_UserToken, TEXT("Category"), TEXT("GameJolt"));
				MetaData->SetValue(NewProp_UserToken, TEXT("DisplayName"), TEXT("Players UserToken"));
				MetaData->SetValue(NewProp_UserToken, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
				MetaData->SetValue(NewProp_UserName, TEXT("Category"), TEXT("GameJolt"));
				MetaData->SetValue(NewProp_UserName, TEXT("DisplayName"), TEXT("Players Username"));
				MetaData->SetValue(NewProp_UserName, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
				MetaData->SetValue(NewProp_Game_PrivateKey, TEXT("Category"), TEXT("GameJolt"));
				MetaData->SetValue(NewProp_Game_PrivateKey, TEXT("DisplayName"), TEXT("Your Game Private Key"));
				MetaData->SetValue(NewProp_Game_PrivateKey, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
				MetaData->SetValue(NewProp_Game_ID, TEXT("Category"), TEXT("GameJolt"));
				MetaData->SetValue(NewProp_Game_ID, TEXT("DisplayName"), TEXT("Your Game ID"));
				MetaData->SetValue(NewProp_Game_ID, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
				MetaData->SetValue(NewProp_OnFailed, TEXT("Category"), TEXT("GameJolt"));
				MetaData->SetValue(NewProp_OnFailed, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
				MetaData->SetValue(NewProp_OnFailed, TEXT("ToolTip"), TEXT("Event which triggers when the request failed"));
				MetaData->SetValue(NewProp_OnGetResult, TEXT("Category"), TEXT("GameJolt"));
				MetaData->SetValue(NewProp_OnGetResult, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
				MetaData->SetValue(NewProp_OnGetResult, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
				MetaData->SetValue(NewProp_Content, TEXT("Category"), TEXT("GameJolt"));
				MetaData->SetValue(NewProp_Content, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
				MetaData->SetValue(NewProp_Content, TEXT("ToolTip"), TEXT("Contains the actual page content, as a string"));
				MetaData->SetValue(NewProp_GameJoltComponentEnum, TEXT("Category"), TEXT("GameJolt"));
				MetaData->SetValue(NewProp_GameJoltComponentEnum, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
				MetaData->SetValue(NewProp_m_LoggedIn, TEXT("Category"), TEXT("GameJolt"));
				MetaData->SetValue(NewProp_m_LoggedIn, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
				MetaData->SetValue(NewProp_Guest_username, TEXT("Category"), TEXT("GameJolt"));
				MetaData->SetValue(NewProp_Guest_username, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
				MetaData->SetValue(NewProp_bGuest, TEXT("Category"), TEXT("GameJolt"));
				MetaData->SetValue(NewProp_bGuest, TEXT("ModuleRelativePath"), TEXT("Classes/UEGameJoltAPI.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UUEGameJoltAPI(Z_Construct_UClass_UUEGameJoltAPI, TEXT("UUEGameJoltAPI"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UUEGameJoltAPI);
	UPackage* Z_Construct_UPackage_GameJoltPlugin()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/GameJoltPlugin")), false, false));
			ReturnPackage->PackageFlags |= PKG_CompiledIn | 0x00000000;
			FGuid Guid;
			Guid.A = 0x9197D9E9;
			Guid.B = 0xFD491139;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

			Z_Construct_UDelegateFunction_GameJoltPlugin_OnGetResult__DelegateSignature();
			Z_Construct_UDelegateFunction_GameJoltPlugin_OnFailed__DelegateSignature();
		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
